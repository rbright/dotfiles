#!/usr/bin/env zsh

# Perform an ls -la after switching directories, because I'm going to do it.
function cd {
  builtin cd "$@" && ls -la;
}

# Count the total number of lines in files containing the given extension
# $1 - File extension
function countlines () {
  find . -name "*.$1" | xargs wc -l;
}

# Remove Docker images in the "dangling" state
function dockerclean () {
  docker rm `docker ps --no-trunc -aq`
  docker images -q --filter "dangling=true" | xargs docker rmi
}

# Clear the cache to fix the iOS Simulator
function fixiossim () {
  rm -rf ~/Library/Developer/CoreSimulator/Caches
}

# Disable "Downloaded from Internet warnings" in Mac OS X
function downloadwarnings() {
  if [[ `uname` == 'Darwin' ]]; then
    defaults write com.apple.LaunchServices LSQuarantine -bool NO
  fi
}

# Flush the DNS cache in macOS
function flushdns () {
  if [[ `uname` == 'Darwin' ]]; then
    sudo dscacheutil -flushcache
    sudo killall -HUP mDNSResponder
  fi
}

# Kill all processes using the given directory
# $1 - String representing the directory
function killdir () {
  lsof | grep $1 | awk '{print $2}' | xargs kill;
}

# Display man pages in vim for syntax highlighting.
function man() {
  /usr/bin/man $* | \
      col -b | \
        vim -R -c 'set ft=man nomod nolist' -
}

# Make a directory and change to it
function mcd () {
  mkdir -p "$@" && eval cd "\"\$$#\"";
}

# Scan the network for devices
function netscan () {
  ifconfig | grep broadcast; arp -a | grep :
}

# Clear duplicates from the "Open With" menu in OS X.
function openwithdups() {
  if [[ `uname` == 'Darwin' ]]; then
    /System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user
  fi
}

# Remove Podman images in the "dangling" state
function podclean () {
  podman rm `podman ps --no-trunc -aq`
  podman images -q --filter "dangling=true" | xargs podman rmi
}

# Remove vim undo files from the current directory
function rmpyc () {
  find . -name "*.pyc" -exec rm -f {} \;
}

# Remove vim undo files from the current directory
function rmundo () {
  find . -name "*.un~" -exec rm -f {} \;
}

# Stop the running tmuxinator sessions
function stopwork () {
  tmux kill-session -t rinsed
  tmux kill-session -t tomorrow
}

# Monitor the TCP traffic on the specified port
# $1 - Integer representing the TCP port to be monitored
function tcpmonitor () {
  sudo /usr/sbin/tcpdump -ln -A -s1024 -i $1 tcp port $2;
}

# Remove vim plugins not included in vimrc
function vim-clean () {
  vim -c "execute \"PlugClean!\" | q | q"
}

# Update vim plugins
function vim-update () {
  vim +PlugUpdate +qall
}

# Update oh-my-zsh
function zsh-update () {
  pushd "$HOME/.oh-my-zsh"
    git pull origin master
  popd
}
