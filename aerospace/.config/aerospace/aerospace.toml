# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 300

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# [[on-window-detected]]
# if.app-id = 'com.apple.systempreferences'
# if.app-name-regex-substring = 'settings'
# if.window-title-regex-substring = 'substring'
# if.workspace = 'workspace-name'
# if.during-aerospace-startup = true
# check-further-callbacks = true
# run = ['layout floating', 'move-node-to-workspace S']  # The callback itself

################################################################################
# App to Workspace Assignments
################################################################################

############################################################
# Workspace 0 - General
############################################################

# Brave Browser
[[on-window-detected]]
if.app-id = 'com.brave.Browser'
run = ['layout tiling', 'move-node-to-workspace 0']
check-further-callbacks = true

# Brave Browser - Task Manager
[[on-window-detected]]
if.window-title-regex-substring = 'task manager'
run = ['layout floating']

# Photos
[[on-window-detected]]
if.app-name-regex-substring = 'photos'
run = ['layout tiling', 'move-node-to-workspace 0']

############################################################
# Workspace 1 - Code Editor
############################################################

# Android Studio
[[on-window-detected]]
if.app-id = 'com.google.android.studio'
run = ['layout tiling', 'move-node-to-workspace 1']

# Cursor
[[on-window-detected]]
if.app-name-regex-substring = 'cursor'
run = ['layout tiling', 'move-node-to-workspace 1']

# Visual Studio Code
[[on-window-detected]]
if.app-name-regex-substring = 'visual studio code'
run = ['layout tiling', 'move-node-to-workspace 1']

# Windsurf
[[on-window-detected]]
if.app-name-regex-substring = 'windsurf'
run = ['layout tiling', 'move-node-to-workspace 1']

# Xcode
[[on-window-detected]]
if.app-name-regex-substring = 'xcode'
run = ['layout tiling', 'move-node-to-workspace 1']
check-further-callbacks = true

# Zed
[[on-window-detected]]
if.app-name-regex-substring = 'zed'
run = ['layout tiling', 'move-node-to-workspace 1']

############################################################
# Workspace 2 - Development Tools
############################################################

# Console
[[on-window-detected]]
if.app-id = 'com.apple.Console'
run = ['layout tiling', 'move-node-to-workspace 2']

# Cyberduck
[[on-window-detected]]
if.app-id = 'ch.sudo.cyberduck'
run = ['layout tiling', 'move-node-to-workspace 2']
check-further-callbacks = true

# OpenMTP
[[on-window-detected]]
if.app-id = 'io.ganeshrvel.openmtp'
run = ['layout tiling', 'move-node-to-workspace 2']

# Postman
[[on-window-detected]]
if.app-id = 'com.postmanlabs.mac'
run = ['layout tiling', 'move-node-to-workspace 2']

# Proxyman
[[on-window-detected]]
if.app-id = 'com.proxyman.NSProxy'
run = ['layout tiling', 'move-node-to-workspace 2']
check-further-callbacks = true

# TablePlus
[[on-window-detected]]
if.app-id = 'com.tinyapp.TablePlus'
run = ['layout tiling', 'move-node-to-workspace 2']
check-further-callbacks = true

############################################################
# Workspace 3 - Design
############################################################

# ComfyUI
[[on-window-detected]]
if.app-name-regex-substring = 'comfyui'
run = ['layout tiling', 'move-node-to-workspace 3']

# Excalidraw
[[on-window-detected]]
if.app-name-regex-substring = 'excalidraw'
run = ['layout tiling', 'move-node-to-workspace 3']

# Figma
[[on-window-detected]]
if.app-id = 'com.figma.Desktop'
run = ['layout tiling', 'move-node-to-workspace 3']

# Pixelmator Pro
[[on-window-detected]]
if.app-id = 'com.pixelmatorteam.pixelmator.x'
run = ['layout tiling', 'move-node-to-workspace 3']

############################################################
# Workspace 4 - Office
############################################################

# Calibre
[[on-window-detected]]
if.app-id = 'net.kovidgoyal.calibre'
run = ['layout tiling', 'move-node-to-workspace 4']
check-further-callbacks = true

# Calibre - Preferences
[[on-window-detected]]
if.window-title-regex-substring = 'calibre - preferences'
run = 'layout floating'

# Microsoft Excel
[[on-window-detected]]
if.app-id = 'com.microsoft.Excel'
run = ['layout tiling', 'move-node-to-workspace 4']

# Microsoft Excel - Preferences
[[on-window-detected]]
if.window-title-regex-substring = 'excel preferences'
run = ['layout floating']

# Microsoft Word
[[on-window-detected]]
if.app-id = 'com.microsoft.Word'
run = ['layout tiling', 'move-node-to-workspace 4']

############################################################
# Workspace 5 - Trading
############################################################

# Ledger Live
[[on-window-detected]]
if.app-id = 'com.ledger.live'
run = ['layout tiling', 'move-node-to-workspace 5']

# Thinkorswim
[[on-window-detected]]
if.app-name-regex-substring = 'thinkorswim'
run = ['layout tiling', 'move-node-to-workspace 5']
check-further-callbacks = true

# Thinkorswim - Column Set for 'Watchlist'
[[on-window-detected]]
if.window-title-regex-substring = "column set for 'watchlist'"
run = ['layout tiling', 'move-node-to-workspace 5']

############################################################
# Workspace 6 - Messaging
############################################################

# Apple Messages / Google Messages
[[on-window-detected]]
if.app-name-regex-substring = 'messages'
run = ['layout tiling', 'move-node-to-workspace 6']

# Mimestream
[[on-window-detected]]
if.app-id = 'com.mimestream.Mimestream'
run = ['layout tiling', 'move-node-to-workspace 6']
check-further-callbacks = true

# Slack
[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = ['layout tiling', 'move-node-to-workspace 6']

############################################################
# Workspace 7 - Projects / Notes / Tasks
############################################################

# Linear
[[on-window-detected]]
if.app-id = 'com.linear'
run = ['layout tiling', 'move-node-to-workspace 7']

# Obsidian
[[on-window-detected]]
if.app-id = 'md.obsidian'
run = ['layout tiling', 'move-node-to-workspace 7']

# Todoist
[[on-window-detected]]
if.app-id = 'com.todoist.mac.Todoist'
run = ['layout tiling', 'move-node-to-workspace 7']

############################################################
# Workspace 8 - Calendar
############################################################

# Calendar
[[on-window-detected]]
if.app-id = 'com.apple.iCal'
run = ['layout tiling', 'move-node-to-workspace 8']

# Fantastical
[[on-window-detected]]
if.app-id = 'com.flexibits.fantastical2.mac'
run = ['layout tiling', 'move-node-to-workspace 8']
check-further-callbacks = true

############################################################
# Workspace 9 - Terminal / Version Control
############################################################

# Ghostty
[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = ['layout tiling', 'move-node-to-workspace 9']

# Tower
[[on-window-detected]]
if.app-id = 'com.fournova.Tower3'
run = ['layout tiling', 'move-node-to-workspace 9']
check-further-callbacks = true

############################################################
# Workspace C - Workspaces
############################################################

# Workspaces
[[on-window-detected]]
if.window-title-regex-substring = 'space-'
run = ['layout tiling', 'move-node-to-workspace C']

################################################################################
# Floating Windows
################################################################################

# General - Settings
[[on-window-detected]]
if.window-title-regex-substring = 'settings'
run = ['layout floating']

# General - Settings - General
[[on-window-detected]]
if.window-title-regex-substring = 'general'
run = ['layout floating']

# 1Password
[[on-window-detected]]
if.app-id = 'com.1password.1password'
run = 'layout floating'

# Activity Monitor
[[on-window-detected]]
if.app-id = 'com.apple.ActivityMonitor'
run = 'layout floating'

# AirPort Utility
[[on-window-detected]]
if.app-id = 'com.apple.airport.airportutility'
run = 'layout floating'

# App Store
[[on-window-detected]]
if.app-id = 'com.apple.AppStore'
run = 'layout floating'

# Apple Music
[[on-window-detected]]
if.app-id = 'com.apple.Music'
run = 'layout floating'

# Balena Etcher
[[on-window-detected]]
if.app-id = 'io.balena.etcher'
run = 'layout floating'

# Calculator
[[on-window-detected]]
if.app-id = 'com.apple.calculator'
run = 'layout floating'

# CleanShot X
[[on-window-detected]]
if.app-id = 'pl.maketheweb.cleanshotx'
run = 'layout floating'

# Clock
[[on-window-detected]]
if.app-id = 'com.apple.clock'
run = 'layout floating'

# Contacts
[[on-window-detected]]
if.app-id = 'com.apple.AddressBook'
run = 'layout floating'

# DaisyDisk
[[on-window-detected]]
if.app-id = 'com.daisydiskapp.DaisyDisk'
run = 'layout floating'

# Dash
[[on-window-detected]]
if.app-id = 'com.kapeli.dashdoc'
run = 'layout floating'

# Dictionary
[[on-window-detected]]
if.app-id = 'com.apple.Dictionary'
run = 'layout floating'

# Docker
[[on-window-detected]]
if.app-id = 'com.docker.docker'
run = 'layout floating'

# Elgato Camera Hub
[[on-window-detected]]
if.app-id = 'com.elgato.CameraHub'
run = 'layout floating'

# FaceTime
[[on-window-detected]]
if.app-id = 'com.apple.FaceTime'
run = 'layout floating'

# Find My
[[on-window-detected]]
if.app-id = 'com.apple.findmy'
run = 'layout floating'

# Finder
[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = 'layout floating'

# Font Book
[[on-window-detected]]
if.app-id = 'com.apple.FontBook'
run = 'layout floating'

# Harvest
[[on-window-detected]]
if.app-id = 'com.getharvest.harvestxapp'
run = 'layout floating'

# Icon Set Creator
[[on-window-detected]]
if.app-id = 'com.nicolasmiari.icon-set-creator'
run = 'layout floating'

# ImageOptim
[[on-window-detected]]
if.app-id = 'net.pornel.ImageOptim'
run = 'layout floating'

# Karabiner-Elements
[[on-window-detected]]
if.app-id = 'org.pqrs.Karabiner-Elements.Settings'
run = 'layout floating'

# Karabiner-EventViewer
[[on-window-detected]]
if.app-id = 'org.pqrs.Karabiner-EventViewer'
run = 'layout floating'

# LocalSend
[[on-window-detected]]
if.app-id = 'org.localsend.localsendApp'
run = 'layout floating'

# Logitech G Hub
[[on-window-detected]]
if.app-id = 'com.logi.ghub'
run = 'layout floating'

# Loom
[[on-window-detected]]
if.app-id = 'com.loom.desktop'
run = 'layout floating'

# News
[[on-window-detected]]
if.app-id = 'com.apple.news'
run = ['layout floating']

# Passwords
[[on-window-detected]]
if.app-id = 'com.apple.Passwords'
run = ['layout floating']

# Preview
[[on-window-detected]]
if.app-id = 'com.apple.Preview'
run = ['layout floating']

# Proton Pass
[[on-window-detected]]
if.app-id = 'me.proton.pass.electron'
run = 'layout floating'

# Proton VPN
[[on-window-detected]]
if.app-id = 'ch.protonvpn.mac'
run = 'layout floating'

# QuickTime
[[on-window-detected]]
if.app-id = 'om.apple.QuickTimePlayerX'
run = 'layout floating'

# Raycast
[[on-window-detected]]
if.app-id = 'com.raycast.macos'
run = ['layout floating']

# Stocks
[[on-window-detected]]
if.app-id = 'com.apple.stocks'
run = ['layout floating']

# superwhisper
[[on-window-detected]]
if.app-id = 'com.superduper.superwhisper'
run = 'layout floating'

# TextEdit
[[on-window-detected]]
if.app-id = 'com.apple.TextEdit'
run = ['layout floating']

# VNC Viewer
[[on-window-detected]]
if.app-id = 'com.realvnc.vncviewer'
run = 'layout floating'

# Zoom
[[on-window-detected]]
if.app-id = 'us.zoom.xos'
run = 'layout floating'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 0
inner.vertical = 0
outer.left = 0
outer.bottom = 0
outer.top = 0
outer.right = 0

################################################################################
# Key Bindings
################################################################################

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

ctrl-alt-shift-f = 'fullscreen'
ctrl-shift-f = 'layout floating tiling'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
ctrl-alt-h = 'focus left'
ctrl-alt-j = 'focus down'
ctrl-alt-k = 'focus up'
ctrl-alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
ctrl-alt-left = 'move left'
ctrl-alt-down = 'move down'
ctrl-alt-up = 'move up'
ctrl-alt-right = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#join-with
ctrl-shift-left = ['join-with left', 'mode main']
ctrl-shift-down = ['join-with down', 'mode main']
ctrl-shift-up = ['join-with up', 'mode main']
ctrl-shift-right = ['join-with right', 'mode main']

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
ctrl-alt-minus = 'resize smart -50'
ctrl-alt-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 0'
alt-2 = 'workspace 1'
alt-3 = 'workspace 2'
alt-4 = 'workspace 3'
alt-5 = 'workspace 4'
alt-6 = 'workspace 5'
alt-7 = 'workspace 6'
alt-8 = 'workspace 7'
alt-9 = 'workspace 8'
alt-0 = 'workspace 9'
alt-minus = 'workspace C'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace 0'
alt-shift-2 = 'move-node-to-workspace 1'
alt-shift-3 = 'move-node-to-workspace 2'
alt-shift-4 = 'move-node-to-workspace 3'
alt-shift-5 = 'move-node-to-workspace 4'
alt-shift-6 = 'move-node-to-workspace 5'
alt-shift-7 = 'move-node-to-workspace 6'
alt-shift-8 = 'move-node-to-workspace 7'
alt-shift-9 = 'move-node-to-workspace 8'
alt-shift-0 = 'move-node-to-workspace 9'
alt-shift-minus = 'move-node-to-workspace C'

alt-tab = 'workspace-back-and-forth'
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = [
    'layout floating tiling',
    'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

################################################################################
# Workspace to Monitor Assignments
################################################################################

# See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[workspace-to-monitor-force-assignment]
0 = 'main'
1 = 'main'
2 = 'main'
3 = 'main'
4 = 'main'
5 = 'main'
6 = 'main'
7 = 'main'
8 = 'main'
9 = 'secondary'
C = 'secondary'
